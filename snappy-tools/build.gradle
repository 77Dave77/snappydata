apply plugin: 'scala'
apply plugin: 'com.github.maiflai.scalatest'

compileScala.options.encoding = 'UTF-8'

// fix scala+java mix to all use compileScala which uses correct dependency order
sourceSets.main.scala.srcDir "src/main/java"
sourceSets.main.java.srcDirs = []

dependencies {
  compile 'org.scala-lang:scala-library:' + scalaVersion
  compile 'org.scala-lang:scala-reflect:' + scalaVersion
  compile project(':snappy-core_' + scalaBinaryVersion)
  if (new File(rootDir, "snappy-store/build.gradle").exists()) {
    compile project(':snappy-store:gemfirexd:client')
    compile project(':snappy-store:gemfirexd:core')
    compile project(':snappy-store:gemfirexd:tools')

    testCompile project(path: ':snappy-store:gemfirexd:tools', configuration: 'testOutput')
  } else {
    compile files("${rootDir.getAbsolutePath()}/local-repo/gemfirexd-client-${gemfireXDVersion}.jar")
    compile files("${rootDir.getAbsolutePath()}/local-repo/gemfirexd-${gemfireXDVersion}.jar")
    compile files("${rootDir.getAbsolutePath()}/local-repo/gemfirexd-tools-${gemfireXDVersion}.jar")
  }

  // TODO: all these should be in snappy-tools not here but right now everything is in snappy-core
  compile("spark.jobserver:job-server_${scalaBinaryVersion}:0.6.0") {
    exclude(module: 'akka-actor_' + scalaBinaryVersion)
    exclude(module: 'akka-remote_' + scalaBinaryVersion)
    exclude(module: 'akka-slf4j_' + scalaBinaryVersion)
  }

  testCompile project(path: ':snappy-core_' + scalaBinaryVersion, configuration: 'testOutput')
}
